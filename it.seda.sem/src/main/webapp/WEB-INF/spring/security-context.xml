<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- Security datasource is the same of business application -->
	<beans:bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/SEMDataSource" />
	</beans:bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- **************************************************************************** -->
	<context:component-scan base-package="it.seda.sem.security" />

	<!-- enable autowire/inject -->
	<context:annotation-config />

	<!-- enable transaction with annotations -->
	<tx:annotation-driven />

	<!-- define the SqlSessionFactory -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="typeAliasesPackage" value="it.seda.sem.security.domain" />
	</beans:bean>

	<!-- scan for mappers and let them be autowired -->
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<beans:property name="basePackage" value="it.seda.sem.security.persistence" />
	</beans:bean>

	<!-- **************************************************************************** -->

	<http auto-config="true">
		<intercept-url pattern="/welcome" access="ROLE_AMMI, ROLE_WRITER" />
		<!-- <intercept-url pattern="/manager/*" access="ROLE_AMMI" /> <intercept-url 
			pattern="/services/*" access="ROLE_AMMI, ROLE_WRITER" /> -->
		<form-login login-page="/login" authentication-failure-url="/login?failed=true"
			default-target-url="/welcome" />

		<logout logout-success-url="/login" />

		<remember-me />
	</http>
	
	<!-- **************************************************************************** -->

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256" />
	</beans:bean>
	
	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	

</beans:beans>
