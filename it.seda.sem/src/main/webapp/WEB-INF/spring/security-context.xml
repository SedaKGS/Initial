<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- Security datasource is the same of business application -->
	<beans:bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/SEMDataSource" />
	</beans:bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<beans:bean id="transactionSecurityManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- **************************************************************************** -->
	<context:component-scan base-package="it.seda.sem.security" />

	<!-- enable autowire/inject -->
	<context:annotation-config />

	<!-- enable transaction with annotations -->
	<tx:annotation-driven />

	<!-- define the SqlSessionFactory -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="typeAliasesPackage" value="it.seda.sem.security.domain" />
	</beans:bean>

	<!-- scan for mappers and let them be autowired -->
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<beans:property name="basePackage" value="it.seda.sem.security.persistence" />
		<beans:property name="annotationClass" value="it.seda.sem.security.annotations.SecurityRepository"/>
	</beans:bean>
	

	<!-- **************************************************************************** -->

	<beans:bean id="appCtx" class="it.seda.sem.security.ApplicationContextProvider"/> <!-- application context holder -->

	<http auto-config="true" use-expressions="true">
        <intercept-url pattern="/"
                access="permitAll"/>
        <intercept-url pattern="/resources/**"
                access="permitAll"/>                
        <intercept-url pattern="/security/login/**"
                access="permitAll"/>
        <intercept-url pattern="/security/signup/*"
                access="permitAll"/>
        <intercept-url pattern="/security/logout"
                access="permitAll"/>
        <intercept-url pattern="/errors/**"
                access="permitAll"/>

        <intercept-url pattern="/manager/**"
                access="hasRole('ROLE_ADMIN')"/>
	<!--                
        <intercept-url pattern="/**"
                access="hasRole('ROLE_USER')"/>
	-->                
 
      <intercept-url pattern="/events/welcome"
                access="hasAnyRole('ROLE_ADMIN,ROLE_USER,ROLE_ANONYMOUS')"/>
                 
       <intercept-url pattern="/events/**"
                access="hasAnyRole('ROLE_ADMIN,ROLE_USER')"/>
       	
		<form-login login-page="/security/login" 
		            authentication-failure-url="/security/login?failed=true"
			        default-target-url="/events/welcome" />
		
		<!-- Using "logout-success-url" attribute we delete the remember me cookie after logout -->	
		<logout logout-success-url="/events/welcome" 
				logout-url="/security/logout"/>

		<remember-me />
	</http>
	
	<!-- **************************************************************************** -->

	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256" />
	</beans:bean>

	<beans:bean id="saltSource"
		class="org.springframework.security.authentication.dao.ReflectionSaltSource"
		p:userPropertyToUse="username" />

	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="passwordEncoder">
				<salt-source ref="saltSource" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

</beans:beans>
